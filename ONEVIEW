#SingleInstance, Force
#NoEnv
#NoTrayIcon

d1 := 320
d2 := 640
d3 := 960
d4 := 1600

;~ List for Dropdownlist
processDDL=
(Join|
Select Process|
01-ZeroFare - Today's Date
02-ZeroFare - Tomorrow's Date
)

;~ Adding Controls to GUI
Gui, Add, Checkbox, x9 y9 vCheckAll gTASKS_SELECT, All
Gui, Add, DropDownList, x51 y5 w224 vguiProcess, % processDDL
Gui, Add, Button, x283 y4 Default gGO, Go
;~Gui, Add, Text, x325 y9 w103 h13 , XRS/ZF Delay in ms :
;~Gui, Add, ComboBox, x432 y6 w64 vguiLoadDelay  , 0|1000|2000||3000|5000|10000|20000
;~Gui, Add, ListView, x3 y35 w648 r9 vguiTasksList hwndLV1 LV0x10 NoSortHdr Grid Checked gSELECT_ROW_1,
Gui, Add, ListView, x3 y35 w648 r9 vguiTasksList hwndLV1 LV0x10 NoSortHdr Grid Checked,
Gui, Add, StatusBar
;~Adding Columns
LV_InsertCol(1,  0048, "Airline")
LV_InsertCol(2,  0080, "Username")
LV_InsertCol(3,  0000, "Password")
LV_InsertCol(4,  0000, "EmailTo")
LV_InsertCol(5,  0000, "EmailCC")
LV_InsertCol(6,  0000, "DiscDateRaw")
LV_InsertCol(7,  0080, "Disc Date")
LV_InsertCol(8,  0144, "Tariff Range")
LV_InsertCol(9,  0080, "One Tariff")
LV_InsertCol(10, 0080, "One Rule")
LV_InsertCol(11, 0112, "One Category")
SB_SetParts(256)
focusedRow := 1
gosub REDRAW_LISTVIEW
Gui, Show, w660 h253, ATPCO AUTOMATION V1.0
return


;~Read dat file and inser 
REDRAW_LISTVIEW:
LV_Delete()
accountsBall := ObjLoad(A_ScriptDir . "\ATPCO-GoldProcessFusion.dat" )
for key, obj in accountsBall	
LV_Add("" 
, obj._airline
, obj._username
, obj._password
, obj._emailto
, obj._emailcc
, obj.disc["dateraw"]
, obj.disc["datefmt"]
, obj.disc.depth
, obj.disc.onetariff
, obj.disc.onerule
, obj.disc.onecategory)
LV_Modify(focusedRow, "+Select +Focus Vis" )
return


SELECT_ROW_1:
rowAirline=
rowUsername=
rowPassword=
A_GuiControlVAR := "Update"
Gui , 1:Submit , NoHide
if A_GuiControl <> guiListAccounts
return
if A_GuiEvent = DoubleClick
{
selectedRow := LV_GetNext( 0 , "F" )
if not selectedRow
return
LV_GetText(rowAirline     , selectedRow,  1 )
LV_GetText(rowUsername    , selectedRow,  2 )
LV_GetText(rowPassword    , selectedRow ,  3 )
LV_GetText(rowEmailTo     , selectedRow ,  4 )
LV_GetText(rowEmailCC     , selectedRow ,  5 )
LV_GetText(rowDiscDateRaw , selectedRow ,  6 )
LV_GetText(rowDiscDateFmt , selectedRow ,  7 )
LV_GetText(rowTariffRange , selectedRow ,  8 )
LV_GetText(rowOneTariff   , selectedRow ,  9 )
LV_GetText(rowOneRule     , selectedRow , 10 )
LV_GetText(rowOneCategory , selectedRow , 11 )
SB_SetText("For the Airline : " webUsername )
focusedRow := selectedRow
gosub, SUB_TO_UPDATE_TASK
}
return

SUB_TO_UPDATE_TASK:
taskNodeAction  = Update
if ( rowAirline == "Airline" ) AND ( rowUsername == "Username" ) AND (rowPassword == "Password" )
return

GO:
SB_SetText( "Started",1)
hardStop := false
IfInString, varProcess , Select Process
return

GuiControlGet, varProcess,  , guiProcess
MsgBox, 4160, %A_LineNumber% Info ... , %varProcess%, 3.2

if(varProcess == "Select Process")
{
	MsgBox, 4160 , %A_LineNumber% Info ... ,Date not selected, 3.2
	return
}
;~Get Checked Items
accountsList := f_LVGetCheckedItems("" , "ahk_id " . LV1 )
accountsInList := false
rowsGoBall := []
Loop, Parse, accountsList, `n
{
if !A_LoopField
break
StringSplit, rowPar, A_LoopField, `t
rowsGoBall.Push([rowPar1, rowPar2, rowPar3, rowPar4, rowPar5, rowPar6, rowPar7, rowPar8, rowPar9, rowPar10, rowPar11])
accountsInList := true
}
if !accountsInList
{
MsgBox , 4160 , %A_LineNumber% Info ... , No Accounts selected , 3.2
return
}

for key , obj in rowsGoBall
{
	
SB_SetText("Configuring IE",1)
SB_SetText("Pass # " A_Index,2)
SB_SetText("Executing " varProcess, 1)

gosub,TERMINATE_IE
webAirline  := obj.1
webUsername := obj.2
webPassword := obj.3

gosub, INITIATE_IE

if(varProcess == "01-ZeroFare - Today's Date")
{
	tabsForTask := "Fares"
	gosub INITIATE_TABS
	Sleep %d4%
	sessionMode := "auto1"
	whichDay := "same"
	gosub, IE_LOAD_DELAY
	gosub, ZERO_FARES	
}
if (varProcess == "02-ZeroFare - Tomorrow's Date")
{
	tabsForTask  := "Fares"
	Sleep %d4%
	sessionMode := "auto1"
	whichDay := "next"	
}
}
gosub,TERMINATE_IE
gosub, GuiClose
return

;~Check All Check Box
TASKS_SELECT:
{
GuiControlGet, cAll, ,CheckAll
MsgBox, 4160, %A_LineNumber% Info ... , %cAll%, 3.2
Gui, 1:Submit , NoHide
Gui, 1:ListView , guiListAccounts
Loop, % LV_GetCount()
LV_Modify( A_Index , "Icon" . 1 )
if CheckAll
{
LV_Modify(0,  "Check" )
}
else
{
LV_Modify( 0, "-Check" )
}
return
}



;~Find the Checked Airlines
f_LVGetCheckedItems(cN, wN) {	
ControlGet, LVItems, List, , % cN, % wN
Loop, Parse, LVItems, `n
{
;~MsgBox, 4160, %A_LineNumber% Info ... , %A_Index%, 3.2
SendMessage, 0x102C, A_Index - 1, 0x2000, % cN, % wN
CheckedItems .= (ErrorLevel ? "`n" . A_LoopField : "")
}
Return SubStr(CheckedItems, 2)
}

ObjLoad(addr,sz:=""){
static type:=["Char","UChar","Short","UShort","Int","UInt","Int64","UInt64","Double"],num:=[1,1,2,2,4,4,8,8,8]
If (sz=""){
If !FileExist(addr)
return
FileGetSize,sz,%addr%
FileRead,v,*c %addr%
If ErrorLevel||!sz
return
addr:=&v
}
end:=addr+sz,  obj:=[]
While % addr<end{
If NumGet(addr+0,"Char")=-11
k:=ObjLoad(addr+9,sz:=NumGet(addr+1,"UInt64")),addr+=sz+9
else if NumGet(addr+0,"Char")=-10
k:=StrGet(addr+9),addr+=NumGet(addr+1,"UInt64")+9
else      k:=NumGet(addr+1,type[sz:=-1*NumGet(addr+0,"Char")]),addr+=num[sz]+1
If NumGet(addr+0,"Char")= 11
obj[k]:=ObjLoad(addr+9,sz:=NumGet(addr+1,"PTR")),addr+=sz+9
else if NumGet(addr+0,"Char")= 10
obj.SetCapacity(k,sz:=NumGet(addr+1,"UInt64")),DllCall("RtlMoveMemory","PTR",obj.GetAddress(k),"PTR",addr+9,"PTR",sz),addr+=sz+9
else obj[k]:=NumGet(addr+1,type[sz:=NumGet(addr+0,"Char")]),addr+=num[sz]+1
}
return obj
}

ObjDump(obj,ByRef var,mode:=0){
If IsObject(var){
If FileExist(obj){
FileDelete,%obj%
If ErrorLevel
return
}
f:=FileOpen(obj,"rw-rwd"),VarSetCapacity(v,sz:=RawObjectSize(var,mode),0)
,RawObject(var,&v,mode),count:=sz//65536,ptr:=&v
Loop % count
f.RawWrite(ptr+0,65536),ptr+=65536
return sz,f.RawWrite(ptr+0,Mod(sz,65536)),f.Close()
} else return sz,VarSetCapacity(var,sz:=RawObjectSize(obj,mode),0),RawObject(obj,&var,mode)
}

RawObject(obj,addr,buf:=0){
for k,v in obj
{
If IsObject(k)
NumPut(-11,addr+0,"Char"),NumPut(sz:=RawObjectSize(k,buf),addr+1,"UInt64"),RawObject(k,addr+9),addr+=sz+9
else if (k+0="")
NumPut(-10,addr+0,"Char"),NumPut(StrPut(k,addr+9)*(A_IsUnicode?2:1),addr+1,"UInt64"),addr+=NumGet(addr+1,"UInt64")+9
else NumPut( InStr(k,".")?-9:k>4294967295?-8:k>65535?-6:k>255?-4:k>-1?-2:k>-129?-1:k>-32769?-3:k>-2147483649?-5:-7,addr+0,"Char")
,NumPut(k,addr+1,InStr(k,".")?"Double":k>4294967295?"UInt64":k>65535?"UInt":k>255?"UShort":k>-1?"UChar":k>-129?"Char":k>-32769?"Short":k>-2147483649?"Int":"Int64")
,addr+=InStr(k,".")||k>4294967295?9:k>65535?5:k>255?3:k>-129?2:k>-32769?3:k>-2147483649?5:9
If IsObject(v)
NumPut( 11,addr+0,"Char"),NumPut(sz:=RawObjectSize(v,buf),addr+1,"UInt64"),RawObject(v,addr+9),addr+=sz+9
else if (v+0="")
NumPut( 10,addr+0,"Char"),NumPut(sz:=buf?obj.GetCapacity(k):StrPut(v)*(A_IsUnicode?2:1),addr+1,"Int64"),DllCall("RtlMoveMemory","PTR",addr+9,"PTR",&v,"PTR",sz),addr+=sz+9
else NumPut( InStr(v,".")?9:v>4294967295?8:v>65535?6:v>255?4:v>-1?2:v>-129?1:v>-32769?3:v>-2147483649?5:7,addr+0,"Char")
,NumPut(v,addr+1,InStr(v,".")?"Double":v>4294967295?"UInt64":v>65535?"UInt":v>255?"UShort":v>-1?"UChar":v>-129?"Char":v>-32769?"Short":v>-2147483649?"Int":"Int64")
,addr+=InStr(v,".")||v>4294967295?9:v>65535?5:v>255?3:v>-129?2:v>-32769?3:v>-2147483649?5:9
}
}

RawObjectSize(obj,buf:=0,sz:=0){
for k,v in obj
{
If IsObject(k)
sz+=RawObjectSize(k,buf)+9
else if (k+0="")
sz+=StrPut(k)*(A_IsUnicode?2:1)+9
else sz+=InStr(k,".")||k>4294967295?9:k>65535?5:k>255?3:k>-129?2:k>-32769?3:k>-2147483649?5:9
If IsObject(v)
sz+=RawObjectSize(v,buf)+9
else if (v+0="")
sz+=(buf?obj.GetCapacity(k):StrPut(v)*(A_IsUnicode?2:1))+9
else sz+=InStr(v,".")||v>4294967295?9:v>65535?5:v>255?3:v>-129?2:v>-32769?3:v>-2147483649?5:9
}
return sz
}

GuiClose:
{
	ExitApp
	return
}


LogToFile(TextToLog)
{		
	FormatTime, TimeString,, yyyyMMdd
	fileName :=  TimeString . ".txt"
    FileAppend, %TextToLog%`n, %fileName%
}


IE_LOAD_DELAY:
{
delayStart=
delayCount=
Gui , 1:Submit , NoHide
GuiControlGet , varLoadDelay , , guiLoadDelay
delayStart := A_TickCount
Progress , M w0256 h0080 C00 FM8 WM400 FS8 WS400 , %A_Space% , %A_Space% , Pausing for ATPCO Web Site load
Loop
{
if ( delayCount >= varLoadDelay )
{
Progress ,                 ,          , [%varLoadDelay% ms] of [%varLoadDelay% ms] ,          ,
Sleep , 1600
Progress , Off
break
}
delayCount   := A_TickCount - delayStart
calcProgress := ( delayCount / varLoadDelay ) * 100
Progress ,                 ,          , [%delayCount% ms] of [%varLoadDelay% ms] ,          ,
Progress , %calcProgress%
Sleep, 100
}
Progress , Off
return
}


TERMINATE_IE:
WinActivate,FM Home
d3 := 960
Sleep %d3%
FormatTime, Time
curDateTime := Time
LogToFile("===================Started At=================== " curDateTime)
LogToFile("1. Terminating All opened ie")
if IsObject(wb)
{
	;SB_SetText("Logging out of ATPCO",1)
	Loop % subSystemLinks.length
	{	
	If(subSystemLinks[A_index-1].href = "javascript:logOff();" )
		{
			subSystemLinks[A_index-1].click()
			Break
		}
	}
}
Sleep 3200
while wb.busy
{
ToolTip FM HOME is busy [%A_Index%]
sleep 0640
if ( A_Index > 16 )
{
hardStop:= true
break
}
}
*/
ToolTip
Sleep 1600
wb.Quit
Sleep 1600
wb=
while WinExist("ahk_class IEFrame")
{
WinActivate
WinKill   , A       ,        , 4
}
*/
explorerProcessExists:= true
killFilter = `"USERNAME eq %A_UserName%`"
Runwait , taskkill  /f /t /im iexplore.exe /fi %killFilter% , , Hide

LogToFile("2. Finished Termination All Ie")
return


INITIATE_IE:
DetectHiddenWindows,On
wb := ComObjCreate("InternetExplorer.Application")
wb.Visible := true
LogToFile("3. Opening IE and Navigating to https://faremanager.atpco.net/fmhome/login.jsp")
wb.Navigate("https://faremanager.atpco.net/fmhome/login.jsp")
while wb.busy
sleep 0640
WinGet,atpcoHWND,ID,A
WinMaximize,ahk_id %atpcoHWND%
username_input:= wb.document.getElementById("j_username")
username_input.value:= webUsername
Sleep 3200
LogToFile("4. Login for " webUsername)
MsgBox, 4160, %A_LineNumber% Info ... , %webPassword%, 3.2

wb.document.getElementsByName("j_password")[0].value := webPassword
Sleep 3200
withNameIsLogin:= wb.document.getElementsByName("login")

LogToFile("5. Entered Username and Password")

Loop % withNameIsLogin.length
{
If(withNameIsLogin[A_index-1].classname = "o-fluidmedia--full o-fg--c-white o-bg--c-pacific-blue u-space--pa-t")
{
	withNameIsLogin[A_index-1].click()
    LogToFile("6. Loging button clicked")
	Break
}
}
while wb.busy
{
sleep 0640
if (A_Index > 48 )
{
hardStop:= true
break
}
}
subSystemLinks:= wb.document.getelementsByTagName("a")
return

INITIATE_TABS:
SetTitleMatchMode, 2
SetTitleMatchMode, Slow
len := subSystemLinks.length
MsgBox,4096, %A_LineNumber% Info ... ,%len% pass length # %A_Index%, 3.2
DetectHiddenWindows,On

Loop % subSystemLinks.length
{
If(subSystemLinks[A_index-1].href = "javascript:openApplicationWindow('Fares')")
{
  subSystemLinks[A_index-1].click()
  LogToFile("7. Fares Link Clicked")
  Break
}
}
MsgBox,4096, %A_LineNumber% Info ... ,Coming pass length # %A_Index%, 3.2
sleep 0960

return


ZERO_FARES:
DetectHiddenWindows, On	
SetWorkingDir %A_ScriptDir%
runwait %A_WorkingDir%\Status-window.exe %sessionMode% %webAirline% %whichDay%
WinActivate, ATPCO-Process
return
